scale_color_manual(values=palette.landscape, labels=c("rural", "urban"))
)
x <- x+1
} # end loop j
setwd(output)
plot4 <- ggarrange(a1,a2,a3,a4,a5,a6,a7,a8,a9, # arrange to plots nicely and export them
ncol = 3, nrow = 3,
labels = c(LETTERS[1:9]),
common.legend = TRUE)
annotate_figure(plot4, top = text_grob(paste("B.pascuorum: comparison of ", i, " and traits across landscapes", sep = ""),
face = "bold", size = 22))
ggsave(paste("./landscape comparison/functional diversity/pasc_ID/FD_pasc_corr_", i, "_BBtraits_landscapes.png", sep = ""), width = 15, height = 15)
setwd(input)
} # end loop i
## B.LAPIDARIUS ----
# only B.lapidarius
BB22.bb.traits.sp <- BB22.bb.traits[BB22.bb.traits$bbspecies == "B.lapidarius",]
# import data with spatial information on sites
BB22.sites.meta <- read_csv("BB22_sites_2016.csv")
# import data with functional diversity of plants per site
BB22.fun.ID <- read_csv("./FD/FD_B.lapidarius_ID.short.csv")%>%
rename_with(.cols = 1, ~"ID")%>%
rename_with(.cols = 2, ~"sp_richn")%>%
rename_with(.cols = 3, ~"fric")%>%
rename_with(.cols = 5, ~"fdiv")%>%
rename_with(.cols = 4, ~"feve")
# filter functional metrics of plant traits to compare with traits per individual
BB22.fun.ID <- subset(BB22.fun.ID, ID %in% BB22.bb.traits.sp$ID)
# add site coordinates to the trait data frame (in LV95)
BB22.ID <- merge(BB22.bb.traits.sp, BB22.fun.ID, by  = "ID", all.x=TRUE)
BB22.ID <- merge(BB22.ID, BB22.sites.meta[, c(1,2,3)], by  = "site", all.x=TRUE)
# Boxplots for all the variables we want to look at with Wilcoxon test
resp <- c("sp_richn", "fric", "fdiv", "feve")
library(psych)
library(rstatix)
plot_list  <- list()
w.test.list <-  list()
mean.rural <- list()
mean.urban <- list()
palette.landscape <- c("#E69F00", "#56B4E9") #create color palette for landscape
for (j in resp) {
# j <- "sp_richn"
gg.data <- data.frame(landscape=BB22.ID$landscape, value=BB22.ID[[j]])
w.test <- wilcox_test(gg.data, value ~ landscape)
w.test.list[[j]] <- w.test
mean.rural[[j]] <- mean(gg.data$value[gg.data$landscape == "R"], na.rm=TRUE)
mean.urban[[j]] <- mean(gg.data$value[gg.data$landscape == "U"], na.rm=TRUE)
p <- ggplot(gg.data, aes(x=landscape, y = value, fill=landscape)) +
geom_boxplot(notch = T) +
xlab("") +
scale_x_discrete(labels=c('rural', 'urban'))+
theme_classic(base_size = 20) +
theme(aspect.ratio=1) +
guides(alpha = "none") +
scale_fill_manual(values=palette.landscape, guide = "none") +
labs(subtitle = paste("p = ", w.test$p, sep=""))
if (j == "sp_richn") {
p <- p + ylim(0, 18) + ylab("species richness")
} else if (j == "fric") {
p <- p + ylim(0, 1) + ylab("funtional richness")
} else if (j == "fdiv") {
p <- p + ylim(0.6, 0.85) + ylab("funtional divergence")
} else {
p <- p + ylim(0.5, 0.75) + ylab("funtional evenness")
}
plot_list[[j]] <- p
}
#### FIGURE 4a ----
# arrange them into one file to export
setwd(output)
plot <- ggarrange(plot_list[[1]], plot_list[[2]],
plot_list[[3]], plot_list[[4]],
ncol = 1, nrow = 4,
labels = c("A", "B", "C", "D"))
annotate_figure(plot, top = text_grob("B.lapidarius: species richness and funtional diversity across landscapes",
face = "bold", size = 22))
ggsave("./landscape comparison/functional diversity/lapi_ID/FD_B.lapidarius_ID.png", width = 6, height = 24)
setwd(input)
# export statistics of W tests
w.stats.lapi <- rbind(c(mean.rural$sp_richn, mean.urban$sp_richn, w.test.list$sp_richn),
c(mean.rural$fric, mean.urban$fric, w.test.list$fric),
c(mean.rural$feve, mean.urban$feve, w.test.list$feve),
c(mean.rural$fdiv, mean.urban$fdiv, w.test.list$fdiv))
setwd(output)
write.csv(w.stats.lapi,"./landscape comparison/functional diversity/lapi_ID/FD_lapi_W_BBtraits_species.csv")
setwd(input)
#### FIGURES SUPPLEMENT SECTION "Bumblebee Morphology and Diet: Landscape" ----
# plot the relationship of plants traits of one site and bumblebee traits of one site
traits <- colnames(BB22.ID[, 7:15]) # bumblebee traits to look at; prepare for loop
metrics <- colnames(BB22.ID[, c(16:19)]) # plant FD to look at (see file BB22_compute_FD); prepare for loop
library(nlme)
# perform loop to output plots per relationship summarized per FD
# preparation for caption string
fmt <- "%s: adj.R^2 = %.3f, p = %.3f"
for (i in metrics) {
x <- 1 # for naming the plots
for (j in traits) {
f <- formula(paste(i,"~", j))
# fit lm for urban and get R2 and p
lm.urban<- lm (f, data = BB22.ID[BB22.ID$landscape == "urban",])
sum.urban <- summary(lm.urban)
lab.urban <- sprintf(fmt, "urban", sum.urban$adj.r.squared, coef(sum.urban)[2, 4])
# fit lm for rural and get R2 and p
lm.rural <- lm (f, data = BB22.ID[BB22.ID$landscape == "rural",])
sum.rural <- summary(lm.rural)
lab.rural <- sprintf(fmt, "rural", sum.rural$adj.r.squared, coef(sum.rural)[2, 4])
assign(paste("a", x, sep=""), # assign the ggplot to plot name
# define the ggplot
ggplot(BB22.ID, aes_string(j, i, colour = "landscape")) +
geom_point() +
theme_classic(base_size = 20) +
theme(aspect.ratio=1) +
labs(caption = paste(lab.urban, "\n", lab.rural)) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values=palette.landscape, labels=c("rural", "urban"))
)
x <- x+1
} # end loop j
setwd(output)
plot4 <- ggarrange(a1,a2,a3,a4,a5,a6,a7,a8,a9, # arrange to plots nicely and export them
ncol = 3, nrow = 3,
labels = c(LETTERS[1:9]),
common.legend = TRUE)
annotate_figure(plot4, top = text_grob(paste("B.lapidarius: comparison of ", i, " and traits across landscapes", sep = ""),
face = "bold", size = 22))
ggsave(paste("./landscape comparison/functional diversity/lapi_ID/FD_lapi_corr_", i, "_BBtraits_landscapes.png", sep = ""), width = 15, height = 15)
setwd(input)
} # end loop i
# PHYLOGENETIC SPECIES VARIABILITY ----
## preparation ----
# clear work environment
rm(list=ls())
#load libraries
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(glmmTMB)
# set working directory to main repository
input <- "~/Library/CloudStorage/GoogleDrive-simo1996s@gmail.com/My Drive/ETH/Master Thesis/bumblebee_try/01_DATA"
output <- "~/Library/CloudStorage/GoogleDrive-simo1996s@gmail.com/My Drive/ETH/Master Thesis/bumblebee_try/03_OUTPUT"
# load data
setwd(input)
BB22.bb.traits <- read_csv("BB22_traits.csv")
# replace the names for urban and rural
for (i in 1:nrow(BB22.bb.traits)) {
if (BB22.bb.traits$landscape[i] == "urban") {
BB22.bb.traits$landscape[i] = "U"
} else {
BB22.bb.traits$landscape[i] = "R"
}
}
# rename column site to match other dataframes
BB22.bb.traits <- BB22.bb.traits %>%
mutate(site = paste(location, landscape, replicate, sep = ""),
region = paste(location, landscape, sep = ""))
## B.pascuorum ----
#only B.pascuroum
BB22.bb.traits.sp <- BB22.bb.traits[BB22.bb.traits$bbspecies == "B.pascuorum",]
# import data with spatial information on sites
BB22.sites.meta <- read_csv("BB22_sites_2016.csv")
# import data with phylogenetic diversity of plants per site
BB22.fun.ID <- read_csv("./PD/PD_B.pascuorum_ID.short.csv")%>%
dplyr::select(-1)%>%
rename_with(.cols = 1, ~"ID")%>%
rename_with(.cols = 2, ~"sp_richn")%>%
rename_with(.cols = 3, ~"pvar")%>%
rename_with(.cols = 4, ~"pric")%>%
rename_with(.cols = 5, ~"peve")%>%
rename_with(.cols = 6, ~"pclu")
# filter functional metrics of plant traits to compare with traits per individual
BB22.fun.ID <- subset(BB22.fun.ID, ID %in% BB22.bb.traits.sp$ID)
# add site coordinates to the trait data frame (in LV95)
BB22.ID <- merge(BB22.bb.traits.sp, BB22.fun.ID, by  = "ID", all.x=TRUE)%>%
mutate(site = paste(location, landscape, replicate, sep=""))
BB22.ID <- merge(BB22.ID, BB22.sites.meta[, c(1,2,3)], by  = "site", all.x=TRUE)
# Boxplots for all the variables we want to look at with Wilcoxon test
metrics <- colnames(BB22.ID[, c(18:21)]) # plant PD to look at; prepare for loop
library(rstatix)
plot_list  <- list()
w.test.list <- list()
mean.rural <- list()
mean.urban <- list()
palette.landscape <- c("#E69F00", "#56B4E9") #create color palette for landscape
for (j in metrics) {
gg.data <- data.frame(landscape=BB22.ID$landscape,value=BB22.ID[[j]])
w.test <- wilcox_test(gg.data,value~landscape)
w.test.list[[j]] <- w.test
mean.rural[[j]] <- mean(gg.data$value[gg.data$landscape == "R"], na.rm=TRUE)
mean.urban[[j]] <- mean(gg.data$value[gg.data$landscape == "U"], na.rm=TRUE)
p <- ggplot(gg.data, aes(x=landscape, y = value, fill=landscape)) +
geom_boxplot(notch = T) +
xlab("") +
scale_x_discrete(labels=c('rural', 'urban'))+
theme_classic(base_size = 20) +
theme(aspect.ratio=1) +
guides(alpha = "none") +
scale_fill_manual(values=palette.landscape, guide = "none") +
labs(subtitle = paste("p = ", w.test$p, sep=""))
if (j == "pric") {
p <- p + ylim(0, 1) + ylab("phylogenetic species richness")
} else if (j == "pclu") {
p <- p + ylim(0, 1) + ylab("phylogenetic species clustering")
} else if (j == "peve") {
p <- p + ylim(0, 1) + ylab("phylogenetic species evenness")
} else {
p <- p + ylim(0, 1) + ylab("phylogenetic species variability")
}
plot_list[[j]] <- p
}
#### FIGURE 4b ----
# arrange them into one file to export
setwd(output)
plot <- ggarrange(plot_list[[1]],plot_list[[2]],
plot_list[[3]],plot_list[[4]],
ncol = 1, nrow = 4,
labels = c("A", "B", "C", "D"))
annotate_figure(plot, top = text_grob("B.pascuorum: phylogenetic diversity across landscapes",
face = "bold", size = 22))
ggsave("./landscape comparison/phylogenetic diversity/pasc_ID/PD_B.pascuorum_ID.png", width = 6, height = 24)
setwd(input)
# export statistics of W tests
w.stats.pasc <- rbind(c(mean.rural$pvar, mean.urban$pvar, w.test.list$pvar),
c(mean.rural$pric, mean.urban$pric, w.test.list$pric),
c(mean.rural$pclu, mean.urban$pclu, w.test.list$pclu),
c(mean.rural$peve, mean.urban$peve, w.test.list$peve))
setwd(output)
write.csv(w.stats.pasc,"./landscape comparison/phylogenetic diversity/pasc_ID/PD_W_pasc_BBtraits_species.csv")
setwd(input)
# plot the relationship of plants traits of one site and bumblebee traits of one site
traits <- colnames(BB22.ID[, 7:15]) # bumblebee traits to look at; prepare for loop
library(nlme)
# perform loop to output plots per relationship summarized per PD
# preparation for caption string
fmt <- "%s: adj.R^2 = %.3f, p = %.3f"
for (i in metrics) {
x <- 1 # for naming the plots
for (j in traits) {
f <- formula(paste(i,"~", j))
# fit lm for urban and get R2 and p
lm.urban <- lm (f, data = BB22.ID[BB22.ID$landscape == "U",], na.action=na.exclude)
sum.urban <- summary(lm.urban)
lab.urban <- sprintf(fmt, "urban", sum.urban$adj.r.squared, coef(sum.urban)[2, 4])
# fit lm for rural and get R2 and p
lm.rural <- lm (f, data = BB22.ID[BB22.ID$landscape == "R",], na.action=na.exclude)
sum.rural <- summary(lm.rural)
lab.rural <- sprintf(fmt, "rural", sum.rural$adj.r.squared, coef(sum.rural)[2, 4])
assign(paste("a", x, sep=""), # assign the ggplot to plot name
# define the ggplot
ggplot(BB22.ID, aes_string(j, i, colour = "landscape")) +
geom_point() +
theme_classic(base_size = 20) +
theme(aspect.ratio=1) +
labs(caption = paste(lab.urban, "\n", lab.rural)) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values=palette.landscape, labels=c("rural", "urban"))
)
x <- x+1
} # end loop j
setwd(output)
plot4 <- ggarrange(a1,a2,a3,a4,a5,a6,a7,a8,a9, # arrange to plots nicely and export them
ncol = 3, nrow = 3,
labels = c(LETTERS[1:9]),
common.legend = TRUE)
annotate_figure(plot4, top = text_grob(paste("B.pascuorum: comparison of ", i, " and traits across landscapes", sep = ""),
face = "bold", size = 22))
ggsave(paste("./landscape comparison/phylogenetic diversity/pasc_ID/PD_pasc_corr_", i, "_BBtraits_landscapes.png", sep = ""), width = 15, height = 15)
setwd(input)
} # end loop i
## B.LAPIDARIUS ----
#only B.lapidarius
BB22.bb.traits.sp <- BB22.bb.traits[BB22.bb.traits$bbspecies == "B.lapidarius",]
# import data with spatial information on sites
BB22.sites.meta <- read_csv("BB22_sites_2016.csv")
# import data with phylogenetic diversity of plants per site
BB22.fun.ID <- read_csv("./PD/PD_B.lapidarius_ID.short.csv")%>%
dplyr::select(-1)%>%
rename_with(.cols = 1, ~"ID")%>%
rename_with(.cols = 2, ~"sp_richn")%>%
rename_with(.cols = 3, ~"pvar")%>%
rename_with(.cols = 4, ~"pric")%>%
rename_with(.cols = 5, ~"peve")%>%
rename_with(.cols = 6, ~"pclu")
# filter functional metrics of plant traits to compare with traits per individual
BB22.fun.ID <- subset(BB22.fun.ID, ID %in% BB22.bb.traits.sp$ID)
# add site coordinates to the trait data frame (in LV95)
BB22.ID <- merge(BB22.bb.traits.sp, BB22.fun.ID, by  = "ID", all.x=TRUE)%>%
mutate(site = paste(location, landscape, replicate, sep=""))
BB22.ID <- merge(BB22.ID, BB22.sites.meta[, c(1,2,3)], by  = "site", all.x=TRUE)
# Boxplots for all the variables we want to look at with Wilcoxon test
metrics <- colnames(BB22.ID[, c(18:21)]) # plant PD to look at; prepare for loop
library(rstatix)
plot_list  <- list()
w.test.list <- list()
mean.rural <- list()
mean.urban <- list()
palette.landscape <- c("#E69F00", "#56B4E9") #create color palette for landscape
for (j in metrics) {
gg.data <- data.frame(landscape=BB22.ID$landscape,value=BB22.ID[[j]])
w.test <- wilcox_test(gg.data,value~landscape)
w.test.list[[j]] <- w.test
mean.rural[[j]] <- mean(gg.data$value[gg.data$landscape == "R"], na.rm=TRUE)
mean.urban[[j]] <- mean(gg.data$value[gg.data$landscape == "U"], na.rm=TRUE)
p <- ggplot(gg.data, aes(x=landscape, y = value, fill=landscape)) +
geom_boxplot(notch = T) +
xlab("") +
scale_x_discrete(labels=c('rural', 'urban'))+
theme_classic(base_size = 20) +
theme(aspect.ratio=1) +
guides(alpha = "none") +
scale_fill_manual(values=palette.landscape, guide = "none") +
labs(subtitle = paste("p = ", w.test$p, sep=""))
if (j == "pric") {
p <- p + ylim(0, 1) + ylab("phylogenetic species richness")
} else if (j == "pclu") {
p <- p + ylim(0, 1) + ylab("phylogenetic species clustering")
} else if (j == "peve") {
p <- p + ylim(0, 1) + ylab("phylogenetic species evenness")
} else {
p <- p + ylim(0, 1) + ylab("phylogenetic species variability")
}
plot_list[[j]] <- p
}
#### FIGURE 4a ----
# arrange them into one file to export
setwd(output)
plot <- ggarrange(plot_list[[1]],plot_list[[2]],
plot_list[[3]],plot_list[[4]],
ncol = 1, nrow = 4,
labels = c("A", "B", "C", "D"))
annotate_figure(plot, top = text_grob("B.lapidarius: phylogenetic diversity across landscapes",
face = "bold", size = 22))
ggsave("./landscape comparison/phylogenetic diversity/lapi_ID/PD_B.lapidarius_ID.png", width = 6, height = 24)
setwd(input)
# export statistics of W tests
w.stats.lapi <- rbind(c(mean.rural$pvar, mean.urban$pvar, w.test.list$pvar),
c(mean.rural$pric, mean.urban$pric, w.test.list$pric),
c(mean.rural$pclu, mean.urban$pclu, w.test.list$pclu),
c(mean.rural$peve, mean.urban$peve, w.test.list$peve))
setwd(output)
write.csv(w.stats.lapi,"./landscape comparison/phylogenetic diversity/lapi_ID/PD_W_lapi_BBtraits_species.csv")
setwd(input)
# plot the relationship of plants traits of one site and bumblebee traits of one site
traits <- colnames(BB22.ID[, 7:15]) # bumblebee traits to look at; prepare for loop
library(nlme)
# perform loop to output plots per relationship summarized per FD
# preparation for caption string
fmt <- "%s: adj.R^2 = %.3f, p = %.3f"
for (i in metrics) {
x <- 1 # for naming the plots
for (j in traits) {
f <- formula(paste(i,"~", j))
# fit lm for urban and get R2 and p
lm.urban <- lm (f, data = BB22.ID[BB22.ID$landscape == "U",], na.action=na.exclude)
sum.urban <- summary(lm.urban)
lab.urban <- sprintf(fmt, "urban", sum.urban$adj.r.squared, coef(sum.urban)[2, 4])
# fit lm for rural and get R2 and p
lm.rural <- lm (f, data = BB22.ID[BB22.ID$landscape == "R",], na.action=na.exclude)
sum.rural <- summary(lm.rural)
lab.rural <- sprintf(fmt, "rural", sum.rural$adj.r.squared, coef(sum.rural)[2, 4])
assign(paste("a", x, sep=""), # assign the ggplot to plot name
# define the ggplot
ggplot(BB22.ID, aes_string(j, i, colour = "landscape")) +
geom_point() +
theme_classic(base_size = 20) +
theme(aspect.ratio=1) +
labs(caption = paste(lab.urban, "\n", lab.rural)) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values=palette.landscape, labels=c("rural", "urban"))
)
x <- x+1
} # end loop j
setwd(output)
plot4 <- ggarrange(a1,a2,a3,a4,a5,a6,a7,a8,a9, # arrange to plots nicely and export them
ncol = 3, nrow = 3,
labels = c(LETTERS[1:9]),
common.legend = TRUE)
annotate_figure(plot4, top = text_grob(paste("B.lapidarius: comparison of ", i, " and traits across landscapes", sep = ""),
face = "bold", size = 22))
ggsave(paste("./landscape comparison/phylogenetic diversity/lapi_ID/PD_lapi_corr_", i, "_BBtraits_landscapes.png", sep = ""),
width = 15, height = 15)
setwd(input)
} # end loop i
## preparation ----
# clear environment
rm(list=ls())
# load required library
library(dplyr)
# DIET CONSISTENCY ----
## preparation ----
# clear environment
rm(list=ls())
# load required library
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(rlist)
# set working directory to main repository
input <- "~/Library/CloudStorage/GoogleDrive-simo1996s@gmail.com/My Drive/ETH/Master Thesis/bumblebee_try/01_DATA"
output <- "~/Library/CloudStorage/GoogleDrive-simo1996s@gmail.com/My Drive/ETH/Master Thesis/bumblebee_try/03_OUTPUT"
# set working directory
setwd(input)
# load data
BB22.full <- read_csv("BB22_full.csv") %>%
mutate(site = as_factor(site),
species = as_factor(species),
region = substr(site, 1, 3))
## B.pascuorum ----
# only use B.pascuorum
BB22.full.species <- BB22.full[BB22.full$bbspecies == "B.pascuorum",]
### site level  ----
# prepare list element to store correlation matrices for species, genus and family
pasc.site <- list()
#### species ----
# convert into binary data frame for comaring and later calculate correlations between sites
BB22.full.table <- t(as.data.frame.matrix(+(table(BB22.full.species[, c("site", "plant.species")]) > 0)))
BB22.full.table <- as.data.frame(BB22.full.table)
BB22.full.table$species <- rownames(BB22.full.table)
# create species lists per site
sitenames <- c("ZHUA", "ZHUB", "ZHUC", "ZHRD", "ZHRE", "ZHRF",
"BEUA", "BEUB", "BEUC", "BERD", "BSUA", "BSUB",
"BSUC", "BSRD", "BSRE", "BSRF")
site.species.bb <- list()
for (i in sitenames) {
site.species.bb[[i]]  <- unique(BB22.full.species$plant.species[BB22.full.species$site == i])
} # end loop i
# import data from GBIF and InfoFlora and convert into species lists per site
# InfoFlora
#prepare list to store species lists
site.list.InfoFlora.species <- list()
for (i in sitenames) {
# import data
site.data.InfoFlora  <- read_csv(paste("./sites_plant_list/04_InfoFlora_1500/",i , "_IF_1500.csv", sep = ""))
# summarize only needed variables (site and species)
site.data.InfoFlora <- site.data.InfoFlora %>%
summarise(Species = Taxon,
site = rep(i, nrow(site.data.InfoFlora)),
region = rep(substr(i, 1, 3), nrow(site.data.InfoFlora)))
j <- 0
site.data.InfoFlora$species <- c()
for (j in 1:nrow(site.data.InfoFlora)){
# species names are different than in GBIF -> need to be adapted
site.data.InfoFlora$species[j] <- paste(unlist(strsplit(site.data.InfoFlora$Species[j], split=' ', fixed=TRUE))[1],
unlist(strsplit(site.data.InfoFlora$Species[j], split=' ', fixed=TRUE))[2])
} # end loop j
# store species per site in a list
site.list.InfoFlora.species[[i]] <- unique(site.data.InfoFlora$species)
} # end loop i
## preparation ----
# clear environment
rm(list=ls())
# load required library
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(rlist)
# set working directory to main repository
input <- "~/Library/CloudStorage/GoogleDrive-simo1996s@gmail.com/My Drive/ETH/Master Thesis/bumblebee_try/01_DATA"
output <- "~/Library/CloudStorage/GoogleDrive-simo1996s@gmail.com/My Drive/ETH/Master Thesis/bumblebee_try/03_OUTPUT"
# set working directory
setwd(input)
# load data
BB22.full <- read_csv("BB22_full.csv") %>%
mutate(site = as_factor(site),
species = as_factor(species),
region = substr(site, 1, 3))
## B.pascuorum ----
# only use B.pascuorum
BB22.full.species <- BB22.full[BB22.full$bbspecies == "B.pascuorum",]
### site level  ----
# prepare list element to store correlation matrices for species, genus and family
pasc.site <- list()
#### species ----
# convert into binary data frame for comaring and later calculate correlations between sites
BB22.full.table <- t(as.data.frame.matrix(+(table(BB22.full.species[, c("site", "plant.species")]) > 0)))
BB22.full.table <- as.data.frame(BB22.full.table)
BB22.full.table$species <- rownames(BB22.full.table)
# create species lists per site
sitenames <- c("ZHUA", "ZHUB", "ZHUC", "ZHRD", "ZHRE", "ZHRF",
"BEUA", "BEUB", "BEUC", "BERD", "BSUA", "BSUB",
"BSUC", "BSRD", "BSRE", "BSRF")
site.species.bb <- list()
for (i in sitenames) {
site.species.bb[[i]]  <- unique(BB22.full.species$plant.species[BB22.full.species$site == i])
} # end loop i
# import data from GBIF and InfoFlora and convert into species lists per site
# InfoFlora
#prepare list to store species lists
site.list.InfoFlora.species <- list()
for (i in sitenames) {
# import data
site.data.InfoFlora  <- read_csv(paste("./sites_plant_list/04_InfoFlora_1500/",i , "_IF_1500.csv", sep = ""))
# summarize only needed variables (site and species)
site.data.InfoFlora <- site.data.InfoFlora %>%
summarise(Species = Taxon,
site = rep(i, nrow(site.data.InfoFlora)),
region = rep(substr(i, 1, 3), nrow(site.data.InfoFlora)))
j <- 0
site.data.InfoFlora$species <- c()
for (j in 1:nrow(site.data.InfoFlora)){
# species names are different than in GBIF -> need to be adapted
site.data.InfoFlora$species[j] <- paste(unlist(strsplit(site.data.InfoFlora$Species[j], split=' ', fixed=TRUE))[1],
unlist(strsplit(site.data.InfoFlora$Species[j], split=' ', fixed=TRUE))[2])
} # end loop j
# store species per site in a list
site.list.InfoFlora.species[[i]] <- unique(site.data.InfoFlora$species)
} # end loop i
load("sp_list_gbif_infoflora.RData")
x <- load("sp_list_gbif_infoflora.RData")
getwd()
